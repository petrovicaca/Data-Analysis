# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GbhS5NLPfJcZ1Xhkwqvwjr8u4b8FaLNP
"""

import pandas as pd

import numpy as np

import seaborn as sns #vizualizacija

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
# %matplotlib inline

sns.set(color_codes=True)

"""Titanik data set, isplovio iz Sefilda, potunuo 7 dana nakon, biramo taj dan na Sefildu koju su nama karakterisitke, koji smo covek itd, a da prezivimo

Ucitavanje podataka u data frame
"""

url="https://raw.githubusercontent.com/hajdeger/AOP_PUB/master/cardata.csv"

df=pd.read_csv(url)

df

df.tail(5)

df.shape

"""Provera tipa podataka"""

df.dtypes

"""izbacivanje kolona koje nisu od interesa"""

df=df.drop(["Engine Fuel Type", "Market Category", "Vehicle Style", "Popularity", "Number of Doors", "Vehicle Size"], axis=1)

df.head(10)

df=df.rename(columns={"Engine HP":"HP","Engine Cylinders":"Cylinders","Transmission Type":"Transmission","Driven_Wheels":"Drive Mode"})

df

df.columns

"""Izbacivanje duplih redova"""

d_rows_df=df[df.duplicated()]

d_rows_df

df=df.drop_duplicates()

df.head(5)

"""Izbacivanje nepostojecih vrednosti i nula"""

print(df.isnull().sum())

df=df.dropna() #izbrise sve null vrednosti

df.count

print(df.isnull().sum())

"""Detekcija Outliera"""

sns.boxplot(x=df["MSRP"])

sns.boxplot(x=df["HP"])

sns.boxenplot(x=df["Cylinders"])

Q1=df.quantile(0.25)

Q3=df.quantile(0.75)

IQR=Q3-Q1

print(IQR)

df=df[~((df < (Q1 - 1.5 * IQR)) | df > (Q3 + 1.5 * IQR)).any(axis=1)]

df.shape

sns.boxplot(x=df['MSRP'])

sns.boxplot(x=df['Cylinders'])

"""Histogrami"""

df.Make.value_counts().nlargest(40).plot(kind='bar', figsize=(10,5))
plt.title('Numbers of cars by make')
plt.ylabel('Numbers of cars')
plt.xlabel('Make')

df.Make.value_counts(40)

plt.figure(figsize=(10,5))
c=df.corr()
sns.heatmap(c, cmap="BrBG", annot=True)
c

fig, ax = plt.subplots(figsize=(10,6))
ax.scatter(df['HP'], df['MSRP'])
ax.set_xlabel('HP')
ax.set_ylabel('MSRP')
plt.show()

"""dve maksimalne korelacije i interpteritraje

normirana je moze biti izmedju 0 i 1
"""